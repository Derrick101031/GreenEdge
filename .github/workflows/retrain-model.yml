# GitHub Actions Workflow: Automated TinyML Model Retraining (with ThingSpeak Integration)
# This workflow runs monthly to fetch the latest data from ThingSpeak,
# pre-process it, retrain the TCN model, and commit the updated header file.

name: Automated Model Retraining

on:
  workflow_dispatch:
  schedule:
    # 1. SCHEDULE CHANGED
    # Runs at 01:00 UTC on the 1st of every month (3:00 AM CAT)
    - cron: '0 1 1 * *'

# Define environment variables to pass secrets to steps securely
env:
  THINGSPEAK_CHANNEL_ID: ${{ secrets.THINGSPEAK_CHANNEL_ID }}
  THINGSPEAK_READ_API_KEY: ${{ secrets.THINGSPEAK_READ_API_KEY }}

jobs:
  build-and-commit:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 2. NEW STEP: Fetch data from ThingSpeak
      # Downloads the last 8000 data points from the specified ThingSpeak channel.
      - name: Fetch data from ThingSpeak
        run: |
          curl "https://api.thingspeak.com/channels/${THINGSPEAK_CHANNEL_ID}/feeds.csv?api_key=${THINGSPEAK_READ_API_KEY}&results=8000" -o thingspeak_feed.csv

      # 3. NEW STEP: Pre-process the downloaded data
      # Runs the python script to rename columns and format the CSV for the notebook.
      - name: Pre-process data for notebook
        run: python preprocess_thingspeak.py

      # 4. EXISTING STEP (No changes needed)
      # Runs the training notebook, which now uses the fresh 'dataset.csv'.
      - name: Run model training notebook
        run: jupyter nbconvert --to notebook --execute model.ipynb

      # 5. EXISTING STEP (No changes needed)
      # Commits the newly generated 'model_data.h' if it has changed.
      - name: Commit and push if changed
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add model_data.h
          git diff --quiet --exit-code model_data.h || git commit -m "Automated model update: new tcn_model.h from ThingSpeak data [skip ci]"
          git push
